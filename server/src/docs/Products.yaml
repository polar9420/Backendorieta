tags:
  - name: products
    description: Todo acerca de los productos
  - name: carts
    description: Todo acerca de los carritos
paths:
  /api/products:
    get:
      tags:
        - products
      summary: Obtener todos los productos
      description: Obtener todos los productos
      operationId: getAllProducts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      tags:
        - products
      summary: Agregar un producto
      description: Agregar un producto
      operationId: addProduct
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /api/products/{id}:
    get:
      tags:
        - products
      summary: Obtener un producto por id
      description: Obtener un producto por id
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          description: id del producto
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    patch:
      tags:
        - products
      summary: Actualizar un producto por id
      description: Actualizar un producto por id
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          description: id del producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      tags:
        - products
      summary: Eliminar un producto por id
      description: Eliminar un producto por id
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          description: id del producto
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

components:
  schemas:
    Product:
      type: object
      required:
        - code
        - category
        - title
        - description
        - price
        - thumbnail
        - stock
        - status
      properties:
        code:
          type: string
          description: Código del producto
        category:
          type: enum
          enum: [deporte, formal, informal, other]
          description: Categoría del producto
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        thumbnail:
          type: string
          description: Imagen del producto
        stock:
          type: number
          description: Stock del producto
        status:
          type: boolean
          description: Estado del producto
        owner:
          type: string
          description: Dueño del producto
      example:
        code: "123456"
        category: "deporte"
        title: "Zapatillas"
        description: "Zapatillas de deporte"
        price: 100
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/bus-vehicle-transport-school-256.png"
        stock: 10
        status: true
        owner: "admin"
